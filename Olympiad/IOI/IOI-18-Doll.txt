
https://github.com/tmwilliamlin168/CompetitiveProgramming/blob/master/IOI/18-Doll.cpp
https://github.com/swapnil119/CompetitiveProgramming/blob/master/CompetitiveProgramming/IOI/IOI18-Doll.cpp
https://github.com/win11905/submission/blob/master/IOI/18/doll/cpp/doll.cpp
https://github.com/nikolapesic2802/Programming-Practice/blob/master/IOI%20dolls/main.cpp
https://github.com/MetalBall887/Competitive-Programming/blob/master/Olympiad/IOI/IOI%202018-dolls.cpp
https://github.com/quangloc99/CompetitiveProgramming/blob/master/olympiad/IOI/2018/doll.cpp


https://github.com/Szawinis/CompetitiveProgramming/blob/master/Olympiad/IOI/IOI18-doll.cpp
	General idea is to use many trees (represented as bitmask). To access these trees, run through a filter. Provable that this whole system has <= n + log n nodes (canceling).
